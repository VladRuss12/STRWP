!!!Переделать таблицу, добавив больше полей(год, режиссер, бюджет, средний рейтинг)
!!!Сделать редусеры для работы с новыми полями
!!!Штуку для изменения придется переделать
import { createSlice } from '@reduxjs/toolkit';

const initialState = [
  { id: 1, title: "Ben Blocker", genre: "Teacher", year: 2020 },
  { id: 2, title: "Dave Defender", genre: "Student", year: 2019 },
  { id: 3, title: "Sam Sweeper", genre: "Teacher", year: 2021 },
  { id: 4, title: "Matt Midfielder", genre: "Student", year: 2018 },
  { id: 5, title: "William Winger", genre: "Student", year: 2022 },
  { id: 6, title: "Fillipe Forward", genre: "Rector", year: 2023 },
];

const moviesSlice = createSlice({
  name: 'movies',
  initialState,
  reducers: {
    addMovie: (state, action) => {
      state.push(action.payload);
    },
    deleteMovie: (state, action) => {
      return state.filter(movie => movie.id !== action.payload);
    },
    updateMovie: (state, action) => {
      const index = state.findIndex(movie => movie.id === action.payload.id);
      if (index !== -1) {
        state[index] = action.payload;
      }
    },
    searchMovies: (state, action) => {
      const { searchTerm } = action.payload;
      return state.filter(movie => 
        movie.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
        movie.id === parseInt(searchTerm) // поиск по id
      );
    },
    sortMoviesByYear: (state) => {
      return state.slice().sort((a, b) => a.year - b.year); // сортировка по году
    },
  },
});

export const { addMovie, deleteMovie, updateMovie, searchMovies, sortMoviesByYear } = moviesSlice.actions;

export const selectAllMovies = (state) => state.movies;

export const selectMoviesBySearch = (state, searchTerm) => {
  return state.movies.filter(movie => 
    movie.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
    movie.id === parseInt(searchTerm)
  );
};

export const selectSortedMovies = (state) => {
  return [...state.movies].sort((a, b) => a.year - b.year);
};

export default moviesSlice.reducer;
